from npv_calculator import NPVCalculator

def run_example(name, investment, cash_flows, discount_rate):
    calc = NPVCalculator(investment, cash_flows, discount_rate)
    npv = calc.calculate_npv()

    # ручной расчет для проверки
    expected = -investment
    for t, cf in enumerate(cash_flows, start=1):
        expected += cf / ((1 + discount_rate) ** t)

    print(f"{name}:")
    print(f"  NPV = {round(npv, 2)} (ожидалось {round(expected, 2)})")
    print("  Решение:", "Принять ✅" if npv > 0 else "Отклонить ❌")
    print("-" * 50)


if __name__ == "__main__":
    # 1. Базовый пример из условия
    run_example("Пример 1", 21500, [13225, 13225], 0.15)

    # 2. Увеличенный срок — 4 периода
    run_example("Пример 2", 21500, [13225, 13225, 15000, 18000], 0.15)

    # 3. Отрицательный результат (слишком маленькие потоки)
    run_example("Пример 3", 50000, [5000, 7000, 9000], 0.12)

    # 4. Очень доходный проект
    run_example("Пример 4", 10000, [7000, 8000, 9000], 0.1)

    # 5. Проект с равными потоками
    run_example("Пример 5", 40000, [10000, 10000, 10000, 10000, 10000], 0.1)

    # 6. Длинный проект на 10 лет
    run_example("Пример 6", 60000, [10000]*10, 0.08)

    # 7. Высокая ставка дисконтирования
    run_example("Пример 7", 20000, [6000, 6000, 6000, 6000], 0.3)

    # 8. Нулевая ставка (без дисконтирования)
    run_example("Пример 8", 25000, [5000, 5000, 5000, 5000, 5000], 0.0)

    # 9. Очень большие поздние потоки
    run_example("Пример 9", 100000, [0, 0, 0, 0, 500000], 0.1)

    # 10. Убыточный проект даже при нулевой ставке
    run_example("Пример 10", 50000, [5000, 5000, 5000, 5000, 5000], 0.0)

    # 11. Чередующиеся потоки (то плюс, то минус)
    run_example("Пример 11", 30000, [10000, -5000, 12000, -2000, 15000], 0.1)

    # 12. Малый проект для стартапа
    run_example("Пример 12", 5000, [2000, 2500, 3000], 0.12)